apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: polkadot
  namespace: sl11me-lab
spec:
  serviceName: polkadot-headless
  replicas: 1
  selector:
    matchLabels: { app: polkadot-node }
  template:
    metadata:
      labels: { app: polkadot-node }
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9615"
    spec:
      containers:
        - name: polkadot
          image: parity/polkadot:latest
          imagePullPolicy: IfNotPresent
          args:
            - "--chain=westend"
            - "--name=figment-lab-node"
            - "--base-path=/data"
            - "--prometheus-external"
          ports:
            - { name: p2p,     containerPort: 30333, protocol: TCP }
            - { name: rpc,     containerPort: 9933,  protocol: TCP }
            - { name: ws,      containerPort: 9944,  protocol: TCP }
            - { name: metrics, containerPort: 9615,  protocol: TCP }
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "2Gi"
          volumeMounts:
            - { name: data, mountPath: /data }
          readinessProbe:
            httpGet: { path: /metrics, port: 9615 }
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /metrics, port: 9615 }
            initialDelaySeconds: 60
            periodSeconds: 20
      volumes:
        - name: data
          emptyDir: {}
      terminationGracePeriodSeconds: 30
